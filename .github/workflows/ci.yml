name: ci
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore tools & packages
        run: |
          dotnet tool restore
          dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test + Coverage (Cobertura)
        run: |
          dotnet test -c Release --no-build -m:1 \
            --collect:"XPlat Code Coverage" \
            -p:CollectCoverage=true \
            -p:CoverletOutput=./TestResults/coverage.xml \
            -p:CoverletOutputFormat=cobertura

      - name: Generate HTML coverage
        run: |
          dotnet tool run reportgenerator \
            -reports:**/coverage.xml \
            -targetdir:artifacts/coverage \
            -reporttypes:Html

      - name: Generate OpenAPI
        run: scripts/generate-openapi.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts/coverage
            artifacts/openapi/openapi.json

  docker-smoke:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Build & up
        run: |
          docker compose up --build -d
          sleep 5
          curl -fsSL http://localhost:8080/health
      - name: Down
        if: always()
        run: docker compose down -v
